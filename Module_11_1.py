import requests
import pandas as pd
import matplotlib.pyplot as plt

# Использование библиотеки requests для получения данных с сайта
response = requests.get('https://api.github.com')
print("Статус-код ответа:", response.status_code)
print("Заголовки ответа:", response.headers)
print("Тело ответа:", response.json())

# Использование библиотеки pandas для анализа данных
# Создание DataFrame из словаря
data = {
    'Имя': ['Алиса', 'Боб', 'Чарли'],
    'Возраст': [25, 30, 35],
    'Город': ['Нью-Йорк', 'Лос-Анджелес', 'Чикаго']
}
df = pd.DataFrame(data)

# Вывод первых строк DataFrame
print("\nПервые строки DataFrame:")
print(df.head())

# Выполнение простого анализа данных
print("\nСредний возраст:", df['Возраст'].mean())

# Использование библиотеки matplotlib для визуализации данных
# Построение графика
plt.figure(figsize=(8, 5))
plt.bar(df['Имя'], df['Возраст'], color='skyblue')
plt.xlabel('Имя')
plt.ylabel('Возраст')
plt.title('Возраст людей')
plt.show()

### Комментарий к использованным инструментам библиотек:

#1. **requests**:
 #  - `requests.get(url)`: Используется для отправки HTTP GET запроса на указанный URL и получения ответа.
 #  - `response.status_code`: Позволяет узнать статус-код ответа, что полезно для проверки успешности запроса.
#   - `response.json()`: Преобразует тело ответа в формате JSON в Python-словарь, упрощая работу с данными.

#2. **pandas**:
#   - `pd.DataFrame(data)`: Создает DataFrame из словаря, что позволяет легко работать с табличными данными.
#   - `df.head()`: Возвращает первые несколько строк DataFrame, что удобно для быстрого просмотра данных.
 #  - `df['Возраст'].mean()`: Вычисляет среднее значение в столбце 'Возраст', демонстрируя простоту анализа данных.

#3. **matplotlib**:
#   - `plt.figure(figsize=(8, 5))`: Создает новую фигуру с заданным размером, что позволяет контролировать размеры графика.
#   - `plt.bar(x, y)`: Строит столбчатую диаграмму, где `x` и `y` - данные для осей.
#  - `plt.show()`: Отображает график, позволяя визуализировать данные.
